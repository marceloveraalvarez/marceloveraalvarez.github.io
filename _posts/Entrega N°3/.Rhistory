x = "",
y = "Frecuencia",
caption = "Fuente: Elaboración propia en base a V-Dem (2022).")
base %>%
group_by(year) %>%
summarize(democracias_br = sum(lp_democracy)) %>%
ggplot(mapping = aes(year, democracias_br)) +
geom_point() +
geom_line() +
theme_bw() +
labs(title = "Gráfico 21. Evolución Número de Regímenes No Poliárquicos (1990-2021)",
x = "",
y = "Frecuencia",
caption = "Fuente: Elaboración propia en base a V-Dem (2022).")
skim(bsdr$v2xcl_rol)
skim(base$v2xcl_rol)
base %>%
ggplot(mapping = aes(v2xcl_rol)) +
geom_histogram(bins = 10, fill="lightblue",col="black") +
theme_bw() +
labs(title = "Gráfico 22. Distribución Índice de Igualdad ante la Ley y Derechos Individuales",
x = "Índice de Igualdad ante la Ley y Derechos Individuales V-DEM",
y = "Frecuencia",
caption = "Fuente: Elaboración propia en base a WDI (2022).")
base %>%
ggplot(mapping = aes(v2xcl_rol)) +
geom_histogram(bins = 10, fill="lightblue",col="black") +
theme_bw() +
labs(title = "Gráfico 22. Distribución Índice de Igualdad ante la Ley y Derechos Individuales",
x = "Índice de Igualdad ante la Ley y Derechos Individuales V-DEM",
y = "Frecuencia",
caption = "Fuente: Elaboración propia en base a V-Dem (2022).")
skimr(base)
skim(base)
names(base)
base[,c(4:14, 16:22)]
v_indep <- base[,c(4:14, 16:22)]
variables <- names(v_indep)
View(v_indep)
names(v_indep)
base %>%
summarize_at(.vars = vars(v2x_polyarchy:poverty_gap_at_2_15_a_day_2017_ppp_percent),
.funs = funs(length(.[!is.na(.)])))
base %>%
summarize_at(.vars = vars(v2x_polyarchy:poverty_gap_at_2_15_a_day_2017_ppp_percent),
.funs = funs(N = length(.[!is.na(.)])))
base %>%
summarize_at(.vars = vars(v2x_polyarchy:poverty_gap_at_2_15_a_day_2017_ppp_percent),
N = funs( length(.[!is.na(.)])))
base %>%
summarize_at(.vars = vars(v2x_polyarchy:poverty_gap_at_2_15_a_day_2017_ppp_percent),
.funs = funs( length(.[!is.na(.)])))
base %>%
summarize_at(.vars = vars(v2x_polyarchy:poverty_gap_at_2_15_a_day_2017_ppp_percent),
.funs = funs( length(.[!is.na(.)]),
mean(.[is.na(.)])))
.funs = funs( length(.[!is.na(.)])
.funs = funs( length(.[!is.na(.)]))
.funs = funs( length(.[!is.na(.)]))
base %>%
summarize_at(.vars = vars(v2x_polyarchy:poverty_gap_at_2_15_a_day_2017_ppp_percent),
.funs = funs( length(.[!is.na(.)])))
n <- base %>%
summarize_at(.vars = vars(v2x_polyarchy:poverty_gap_at_2_15_a_day_2017_ppp_percent),
.funs = funs( length(.[!is.na(.)])))
View(n)
n <- n[1,]
n <- n[,1]
View(n)
n <- n[1,]
View(n)
View(n)
n <- base %>%
summarize_at(.vars = vars(v2x_polyarchy:poverty_gap_at_2_15_a_day_2017_ppp_percent),
.funs = funs( length(.[!is.na(.)])))
View(n)
v_indep <- base[,c(4:14, 16:21)]
variables <- names(v_indep)
n <- base %>%
summarize_at(.vars = vars(1:18),
.funs = funs( length(.[!is.na(.)])))
?pivot_longer
n <- n %>%
pivot_longer(cols= c(1:18),
names_to = "variable",
values_to = "n")
View(n)
n <- v_indep %>%
summarize_at(.vars = vars(1:18),
.funs = funs( length(.[!is.na(.)])))
names(base)
n <- v_indep %>%
summarize_at(.vars = vars(v2x_polyarchy:population_total),
.funs = funs( length(.[!is.na(.)])))
n <- n %>%
pivot_longer(cols= c(1:18),
names_to = "variable",
values_to = "n")
n <- n %>%
pivot_longer(cols= c(1:17),
names_to = "variable",
values_to = "n")
View(n)
tabla_base <- n %>%
pivot_longer(cols= c(1:17),
names_to = "variable",
values_to = "n")
View(v_indep)
View(n)
n <- tabla_base[,2]
n <- v_indep %>%
summarize_at(.vars = vars(v2x_polyarchy:population_total),
.funs = funs( length(.[!is.na(.)])))
tabla_base <- n %>%
pivot_longer(cols= c(1:17),
names_to = "variable",
values_to = "n")
n <- tabla_base[,2]
View(n)
n <- tabla_base$n
mean <- v_indep %>%
summarize_at(.vars = vars(v2x_polyarchy:population_total),
.funs = funs( mean(., na.rm = T)))
sd <- v_indep %>%
summarize_at(.vars = vars(v2x_polyarchy:population_total),
.funs = funs(sd(., na.rm = T)))
mediana <- v_indep %>%
summarize_at(.vars = vars(v2x_polyarchy:population_total),
.funs = funs( median(., na.rm = T)))
min <- v_indep %>%
summarize_at(.vars = vars(v2x_polyarchy:population_total),
.funs = funs( min(., na.rm = T)))
max <- v_indep %>%
summarize_at(.vars = vars(v2x_polyarchy:population_total),
.funs = funs( max(., na.rm = T)))
View(max)
rbind(mean, sd, mediana, max, min)
tabla_proto <- rbind(mean, sd, mediana, max, min)
View(tabla_proto)
tabla_proto <- rbind(n, mean, sd, mediana, max, min)
View(tabla_proto)
tabla_proto <- round(tabla_proto,2)
View(tabla_proto)
tabla_proto <- round(tabla_proto[,1],2)
View(tabla_proto)
tabla_proto <- rbind(n, mean, sd, mediana, max, min)
tabla_proto <- round(tabla_proto,2)
View(tabla_base)
View(tabla_proto)
v_indep <- base[,c(4:14, 16:21)]
n <- v_indep %>%
summarize_at(.vars = vars(v2x_polyarchy:population_total),
.funs = funs( length(.[!is.na(.)])))
mean <- v_indep %>%
summarize_at(.vars = vars(v2x_polyarchy:population_total),
.funs = funs( mean(., na.rm = T)))
sd <- v_indep %>%
summarize_at(.vars = vars(v2x_polyarchy:population_total),
.funs = funs(sd(., na.rm = T)))
mediana <- v_indep %>%
summarize_at(.vars = vars(v2x_polyarchy:population_total),
.funs = funs( median(., na.rm = T)))
min <- v_indep %>%
summarize_at(.vars = vars(v2x_polyarchy:population_total),
.funs = funs( min(., na.rm = T)))
max <- v_indep %>%
summarize_at(.vars = vars(v2x_polyarchy:population_total),
.funs = funs( max(., na.rm = T)))
tabla_proto <- rbind(n, mean, sd, mediana, max, min)
tabla_proto <- round(tabla_proto,2)
View(tabla_proto)
tabla_proto$estadistico <- c("N","Media","Des. Est.","Mediana","Máx.","Min")
tabla_proto$estadistico <- c("N","Media","Des. Est.","Mediana","Máx.","Min.")
tabla_proto <- rbind(n, mean, sd, mediana, max, min)
tabla_proto <- round(tabla_proto,2)
tabla <- tabla_proto %>%
pivot_longer(cols = 1:17,
names_to = "variable",
values_to = "valor")
View(tabla)
estadisticos <- rep(c("N", "Media","Des. Est.", "Mediana", "Mín.","Máx."), 17)
tabla <- cbind(tabla, estadisticos)
?pivot_wider
pivot_wider(tabla, id_cols = "variable",
names_from = estadisticos,
values_from = valor)
tabla <- pivot_wider(tabla, id_cols = "variable",
names_from = estadisticos,
values_from = valor)
View(tabla)
tabla_proto <- rbind(n, mean, sd, mediana, max, min)
tabla_proto <- round(tabla_proto,2)
estadisticos <- c("N", "Media","Des. Est.", "Mediana", "Mín.","Máx.")
View(tabla_proto)
tabla <- cbind(tabla_proto, estadisticos)
View(tabla)
View(tabla_proto)
View(tabla)
tabla <- tabla_proto %>%
pivot_longer(cols = 1:17,
names_to = "variable",
values_to = "valor")
View(tabla)
tabla <- cbind(tabla_proto, estadisticos)
tabla <- tabla %>%
pivot_longer(cols = 1:17,
names_to = "variable",
values_to = "valor")
View(tabla)
tabla <- pivot_wider(tabla, id_cols = "variable",
names_from = estadisticos,
values_from = valor)
View(tabla)
tabla <- round(tabla, 2)
tabla <- round(tabla[,2:17], 2)
tabla <- round(tabla[2:17,], 2)
tabla <- round(tabla[,2:17], 2)
tabla <- round(tabla[,2:7], 3)
View(tabla)
View(tabla)
variables
variables <- c("Democracia Electoral V-DEM",
"Sistema Electoral",
"Número Cámaras Legislativas",
"Fortaleza Revisión Judicial",
"CSO Estructura 0",
"CSO Estructura 1",
"CSO Estructura 2",
"CSO Estructura 3",
"Dispersión Poder Federal",
"Dispersión Control Partidario",
"Restricciones Legis. al Ejecutivo",
"Independencia Banco Central",
"PIB",
"PIB per cápita",
"Índice de Gini",
"Pobreza Multidimensional (%)",
"Población Total")
tabla$Variable <- variables
tabla <- tabla %>%
select(Variable, everything())
View(tabla)
options(scipen=999)
tabla <- tabla %>%
select(Variable, everything())
View(tabla)
tabla
base %>%
ggplot(mapping = aes(v2x_feduni)) +
geom_boxplot(fill="lightblue",col="black") +
theme_bw() +
labs(title = "Gráfico 10. Distribución Índice Dispersión del Poder Federal",
x = "Índice de Dispersión del Poder Federal V-DEM",
y = "Frecuencia",
caption = "Fuente: Elaboración propia en base a V-Dem (2022).")
base %>%
ggplot(mapping = aes(v2x_feduni)) +
geom_boxplot(fill="lightblue",col="black") +
theme_bw() +
labs(title = "Gráfico 9. Distribución Índice Dispersión del Poder Federal",
x = "Índice de Dispersión del Poder Federal V-DEM",
y = "Frecuencia",
caption = "Fuente: Elaboración propia en base a V-Dem (2022).")
base %>%
ggplot(mapping = aes(v2x_divparctrl)) +
geom_histogram(bins = 10, fill="lightblue",col="black") +
theme_bw() +
labs(title = "Gráfico 10. Distribución Índice Dispersión del Control Partidario",
x = "Índice de Dispersión del Control Partidario V-DEM",
y = "Frecuencia",
caption = "Fuente: Elaboración propia en base a V-Dem (2022).")
base %>%
ggplot(mapping = aes(v2x_divparctrl)) +
geom_boxplot(fill="lightblue",col="black") +
theme_bw() +
labs(title = "Gráfico 11. Distribución Índice Dispersión del Control Partidario",
x = "Índice de Dispersión del Control Partidario V-DEM",
y = "Frecuencia",
caption = "Fuente: Elaboración propia en base a V-Dem (2022).")
base %>%
ggplot(mapping = aes(e_v2xlg_legcon_5c)) +
geom_histogram(bins = 5, fill="lightblue",col="black") +
theme_bw() +
labs(title = "Gráfico 11. Distribución Capacidad del Poder Legislativo",
x = "Índice de Dispersión del Control Legislativo sobre el Ejecutivo V-DEM",
y = "Frecuencia",
caption = "Fuente: Elaboración propia en base a V-Dem (2022).")
base %>%
ggplot(mapping = aes(e_v2xlg_legcon_5c)) +
geom_histogram(bins = 5, fill="lightblue",col="black") +
theme_bw() +
labs(title = "Gráfico 12. Distribución Capacidad del Poder Legislativo",
x = "Índice de Dispersión del Control Legislativo sobre el Ejecutivo V-DEM",
y = "Frecuencia",
caption = "Fuente: Elaboración propia en base a V-Dem (2022).")
base %>%
ggplot(mapping = aes(lvaw_garriga)) +
geom_histogram(bins = 10, fill="lightblue",col="black") +
theme_bw() +
labs(title = "Gráfico 13. Distribución Independencia del Banco Central",
x = "Índice de Independencia del Banco Central de Garriga",
y = "Frecuencia",
caption = "Fuente: Elaboración propia en base a Garriga (2016).")
base %>%
ggplot(mapping = aes(lvaw_garriga)) +
geom_boxplot(fill="lightblue",col="black") +
theme_bw() +
labs(title = "Gráfico 14. Distribución Independencia del Banco Central",
x = "Índice de Independencia del Banco Central de Garriga",
y = "Frecuencia",
caption = "Fuente: Elaboración propia en base a Garriga (2016).")
base %>%
ggplot(mapping = aes(lvaw_garriga)) +
geom_histogram(bins = 10, fill="lightblue",col="black") +
theme_bw() +
labs(title = "Gráfico 14. Distribución Independencia del Banco Central",
x = "Índice de Independencia del Banco Central de Garriga",
y = "Frecuencia",
caption = "Fuente: Elaboración propia en base a Garriga (2016).")
base %>%
ggplot(mapping = aes(lvaw_garriga)) +
geom_boxplot(fill="lightblue",col="black") +
theme_bw() +
labs(title = "Gráfico 14. Distribución Independencia del Banco Central",
x = "Índice de Independencia del Banco Central de Garriga",
y = "Frecuencia",
caption = "Fuente: Elaboración propia en base a Garriga (2016).")
base %>%
ggplot(mapping = aes(lvaw_garriga)) +
geom_histogram(bins = 10, fill="lightblue",col="black") +
theme_bw() +
labs(title = "Gráfico 13. Distribución Independencia del Banco Central",
x = "Índice de Independencia del Banco Central de Garriga",
y = "Frecuencia",
caption = "Fuente: Elaboración propia en base a Garriga (2016).")
base %>%
ggplot(mapping = aes(gdp_constant_2015_us)) +
geom_histogram(bins = 20, fill="lightblue",col="black") +
theme_bw() +
labs(title = "Gráfico 15. Distribución PIB a precios constantes (2015 US)",
x = "PIB (2015 US)",
y = "Frecuencia",
caption = "Fuente: Elaboración propia en base a WDI (2022).")
options(scipen=0)
base %>%
ggplot(mapping = aes(gdp_constant_2015_us)) +
geom_histogram(bins = 20, fill="lightblue",col="black") +
theme_bw() +
labs(title = "Gráfico 15. Distribución PIB a precios constantes (2015 US)",
x = "PIB (2015 US)",
y = "Frecuencia",
caption = "Fuente: Elaboración propia en base a WDI (2022).")
base %>%
ggplot(mapping = aes(gdp_constant_2015_us)) +
geom_boxplot(fill="lightblue",col="black") +
theme_bw() +
labs(title = "Gráfico 15. Distribución PIB a precios constantes (2015 US)",
x = "PIB (2015 US)",
y = "Frecuencia",
caption = "Fuente: Elaboración propia en base a WDI (2022).")
base %>%
ggplot(mapping = aes(gdp_constant_2015_us)) +
geom_boxplot(fill="lightblue",col="black") +
theme_bw() +
labs(title = "Gráfico 16. Distribución PIB a precios constantes (2015 US)",
x = "PIB (2015 US)",
y = "Frecuencia",
caption = "Fuente: Elaboración propia en base a WDI (2022).")
base %>%
ggplot(mapping = aes(gdp_per_cap_2015_us)) +
geom_boxplot(fill="lightblue",col="black") +
theme_bw() +
labs(title = "Gráfico 18. Distribución PIB per cápita a precios constantes (2015 US)",
x = "PIB (2015 US)",
y = "Frecuencia",
caption = "Fuente: Elaboración propia en base a WDI (2022).")
View(base)
base %>%
ggplot(mapping = aes(gdp_per_capita_2015_us)) +
geom_boxplot(fill="lightblue",col="black") +
theme_bw() +
labs(title = "Gráfico 18. Distribución PIB per cápita a precios constantes (2015 US)",
x = "PIB (2015 US)",
y = "Frecuencia",
caption = "Fuente: Elaboración propia en base a WDI (2022).")
base %>%
ggplot(mapping = aes(gdp_per_capita_constant_2015_us)) +
geom_boxplot(fill="lightblue",col="black") +
theme_bw() +
labs(title = "Gráfico 18. Distribución PIB per cápita a precios constantes (2015 US)",
x = "PIB (2015 US)",
y = "Frecuencia",
caption = "Fuente: Elaboración propia en base a WDI (2022).")
base %>%
ggplot(mapping = aes(gdp_per_capita_constant_2015_us)) +
geom_histogram(bins = 15, fill="lightblue",col="black") +
theme_bw() +
labs(title = "Gráfico 17. Distribución PIB per cápita a precios constantes (2015 US)",
x = "PIB per cápita (2015 US)",
y = "Frecuencia",
caption = "Fuente: Elaboración propia en base a WDI (2022).")
base %>%
ggplot(mapping = aes(gini_index)) +
geom_histogram(bins = 15, fill="lightblue",col="black") +
theme_bw() +
labs(title = "Gráfico 15. Distribución del Índice de Gini",
x = "Índice de Gini",
y = "Frecuencia",
caption = "Fuente: Elaboración propia en base a WDI (2022).")
base %>%
ggplot(mapping = aes(gini_index)) +
geom_boxplot(fill="lightblue",col="black") +
theme_bw() +
labs(title = "Gráfico 20. Distribución del Índice de Gini",
x = "Índice de Gini",
y = "Frecuencia",
caption = "Fuente: Elaboración propia en base a WDI (2022).")
base %>%
ggplot(mapping = aes(multidimensional_poverty_headcount_ratio_percent_of_total_population)) +
geom_histogram(bins = 10, fill="lightblue",col="black") +
theme_bw() +
labs(title = "Gráfico 16. Distribución Pobreza Multidimensional",
x = "Pobreza Multidimensional (% Población)",
y = "Frecuencia",
caption = "Fuente: Elaboración propia en base a WDI (2022).")
base %>%
ggplot(mapping = aes(multidimensional_poverty_headcount_ratio_percent_of_total_population)) +
geom_boxplot(fill="lightblue",col="black") +
theme_bw() +
labs(title = "Gráfico 22. Distribución Pobreza Multidimensional",
x = "Pobreza Multidimensional (% Población)",
y = "Frecuencia",
caption = "Fuente: Elaboración propia en base a WDI (2022).")
base %>%
ggplot(mapping = aes(population_total)) +
geom_histogram(bins = 7, fill="lightblue",col="black") +
theme_bw() +
labs(title = "Gráfico 23. Distribución Población",
x = "Población Total",
y = "Frecuencia",
caption = "Fuente: Elaboración propia en base a WDI (2022).")
base %>%
ggplot(mapping = aes(population_total)) +
geom_boxplot(fill="lightblue",col="black") +
theme_bw() +
labs(title = "Gráfico 24. Distribución Población",
x = "Población Total",
y = "Frecuencia",
caption = "Fuente: Elaboración propia en base a WDI (2022).")
base %>%
ggplot(mapping = aes(population_total)) +
geom_boxplot(fill="lightblue",col="black") +
theme_bw() +
labs(title = "Gráfico 24. Distribución Población",
x = "Población Total",
y = "Frecuencia",
caption = "Fuente: Elaboración propia en base a WDI (2022).")
base %>%
group_by(as.character(hp_democracy)) %>%
count() %>%
ggplot(mapping = aes(`as.character(hp_democracy)`, n)) +
geom_col(fill = "lightblue", col = "black") +
theme_bw() +
scale_x_discrete(labels = c("Otras","Democracias de\nAlto Rendimiento")) +
labs(title = "Gráfico 25. Distribución Democracias Alto Rendimiento",
x = "",
y = "Frecuencia",
caption = "Fuente: Elaboración propia en base a V-Dem (2022).")
base %>%
group_by(year) %>%
summarize(democracias_ar = sum(hp_democracy)) %>%
ggplot(mapping = aes(year, democracias_ar)) +
geom_point() +
geom_line() +
scale_y_continuous(breaks = seq(28, 40, 2)) +
theme_bw() +
labs(title = "Gráfico 26. Evolución Número Democracias Alto Rendimiento (1990-2021)",
x = "",
y = "Frecuencia",
caption = "Fuente: Elaboración propia en base a V-Dem (2022).")
base %>%
group_by(as.character(lp_democracy)) %>%
count() %>%
ggplot(mapping = aes(`as.character(lp_democracy)`, n)) +
geom_col(fill = "lightblue", col = "black") +
theme_bw() +
scale_x_discrete(labels = c("Democracias\nPoliárquicas","No Poliarquías")) +
labs(title = "Gráfico 27. Distribución No Poliarquías",
x = "",
y = "Frecuencia",
caption = "Fuente: Elaboración propia en base a V-Dem (2022).")
base %>%
group_by(year) %>%
summarize(democracias_br = sum(lp_democracy)) %>%
ggplot(mapping = aes(year, democracias_br)) +
geom_point() +
geom_line() +
theme_bw() +
labs(title = "Gráfico 28. Evolución Número de Regímenes No Poliárquicos (1990-2021)",
x = "",
y = "Frecuencia",
caption = "Fuente: Elaboración propia en base a V-Dem (2022).")
base %>%
ggplot(mapping = aes(v2xcl_rol)) +
geom_histogram(bins = 10, fill="lightblue",col="black") +
theme_bw() +
labs(title = "Gráfico 29. Distribución Índice de Igualdad ante la Ley y Derechos Individuales",
x = "Índice de Igualdad ante la Ley y Derechos Individuales V-DEM",
y = "Frecuencia",
caption = "Fuente: Elaboración propia en base a V-Dem (2022).")
library(skimr)
tabla$Variable
